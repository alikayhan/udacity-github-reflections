When would you want to use a remote repository rather than keeping all your work local?
	When I want to make my repository public.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
	We might be trying something experimentally on remote repository and we might do not want it to be synced with our local repository. Manual pulling gives us the complete control over repositories.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forking is used when we want to make changes to other people's code but we also want to keep the original unchanged. Cloning is getting the repository from a remote and working on it on other place. Branches are made when we want to add new features, new modes, fix the bugs etc. but we do not want to break the code in the master branch.

What is the benefit of having a copy of the last known state of the remote stored locally?
	You can get the most current version of the repository and start working on it offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	By sending the code files by e-mail or keeping them on a cloud storage. These ways are easier to use than Git and Github but collaboration, version control and change history put Git and Github way ahead of these. Learning how to use Git and Github definitely pays off.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
	When we want feedback and review from other collaborators.

  
